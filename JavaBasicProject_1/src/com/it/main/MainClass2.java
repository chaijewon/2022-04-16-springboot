package com.it.main;
/*
 *  메소드 => 데이터베이스 연결 
 *  ---------------------- 예외처리 
 *  
 *  1. 메소드 : 클래스 종속 (클래스안에서만 제작) => 독립적인 기능 (함수) 
 *  2. 메소드 => 구성요소 (변수 , 연산자 , 제어문)
 *      => 한가지 기능을 수행할 수 있게 만든다 
 *      => 구조적인 프로그램 제작 (단락)
 *      => 반복 수행을 제거시에 사용 
 *  3. 메소드의 형식 
 *     리턴형(수행 결과값) 메소드명(매개변수...) => 선언부
 *     {
 *          수행 
 *          결과값을 돌려준다  => 구현부 
 *     }
 *     
 *     -------------------------------------------------
 *        리턴형(요청처리 결과)      매개변수(사용자가 요청한 값)
 *        예) 로그인요청 ==> ID,Password
 *            처리 결과  ==> boolean
 *            boolean isLogin(String id,String pwd)
 *     --------------------------------------------------
 *               *** O                 O
 *     --------------------------------------------------
 *               *** O                 X
 *     --------------------------------------------------
 *               *** X                 O
 *               void         ==> insert,update,delete
 *     --------------------------------------------------
 *                X                 X
 *                System.out.println() => 다음줄에 출력 (사용자 정의로는 거의 사용이 안됨)
 *     --------------------------------------------------
 *     
 *     => 메소드 : 매개변수 전송법 
 *               ------------
 *                1. Call By Value (값만 전송)
 *                2. Call By Reference (주소 전송) => 메모리(배열,클래스)
 *                    예외) String (일반 변수) 
 */
public class MainClass2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        int[] arr=new int[5]; // 0 , 0 , 0, 0, 0
        for(int i:arr)
        {
        	System.out.println("i="+i);
        }
        getRand(arr);// 배열,클래스 => 매개변수로 사용하게 되면 변경된 값을 전송 받을 수 있다  
        System.out.println("변경후===");
        for(int i:arr)
        {
        	System.out.println("i="+i);
        }
        /*
         *   반복문 
         *    for : 일반 for문  => 값을 제어 할때 사용 
         *          형식)              ↗ false 종료 
         *                    1   →   2   ←  4
         *               for(초기값 ; 조건식 ; 증감식)
         *               {                   ↗
         *                             ↓ true 
         *                     반복 실행 문장  3
         *               }
         *          for-each 구분 => 출력만 할때 (화면 출력)
         *          for(데이터형 변수:배열,컬렉션)
         *          {  ----------- 인덱스가 아니고 실제 배열에 저장된 값을 가지고 온다 
         *             
         *          }
         */
        
	}
    public static void getRand(int[] arr)
    {
    	for(int i=0;i<arr.length;i++)
    	{
    		arr[i]=(int)(Math.random()*100)+1;
    		//          -------------------
    		//           Math.random() => 0.0~0.99  
    		//     ------ 
    		//     0.0~99.0
    		//     0~99
    		//                             ---
    		//                           1~100
    	}
    }
    
}








